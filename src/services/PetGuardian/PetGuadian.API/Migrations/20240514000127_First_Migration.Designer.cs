// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetGuadian.API.Data;

#nullable disable

namespace PetGuadian.API.Migrations
{
    [DbContext(typeof(AppContextDb))]
    [Migration("20240514000127_First_Migration")]
    partial class First_Migration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PetGuardian.Domain.Models.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Complement")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Neighborhood")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Addresses", (string)null);
                });

            modelBuilder.Entity("PetGuardian.Domain.Models.Medicine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Dosage")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observations")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RemedyName")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PetId");

                    b.ToTable("Medicines");
                });

            modelBuilder.Entity("PetGuardian.Domain.Models.Pet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<short>("Gender")
                        .HasColumnType("smallint");

                    b.Property<string>("PetName")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.Property<int>("Specie")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float?>("Weight")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Pets", (string)null);
                });

            modelBuilder.Entity("PetGuardian.Domain.Models.PetExam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExamDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExamLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExamName")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Observations")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PetId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PetId");

                    b.ToTable("PetExams");
                });

            modelBuilder.Entity("PetGuardian.Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique()
                        .HasFilter("[AddressId] IS NOT NULL");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("PetGuardian.Domain.Models.Vaccine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("FirstVaccin")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Notes")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("PetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("VaccinatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PetId");

                    b.ToTable("Vaccines", (string)null);
                });

            modelBuilder.Entity("PetGuardian.Domain.Models.Veterinarian", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Veterinarians", (string)null);
                });

            modelBuilder.Entity("PetVeterinarian", b =>
                {
                    b.Property<Guid>("PetSharedListId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VeterinariansAllowedId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PetSharedListId", "VeterinariansAllowedId");

                    b.HasIndex("VeterinariansAllowedId");

                    b.ToTable("PetVeterinarian");
                });

            modelBuilder.Entity("PetGuardian.Domain.Models.Medicine", b =>
                {
                    b.HasOne("PetGuardian.Domain.Models.Pet", "Pet")
                        .WithMany("Medicines")
                        .HasForeignKey("PetId")
                        .IsRequired();

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("PetGuardian.Domain.Models.Pet", b =>
                {
                    b.HasOne("PetGuardian.Domain.Models.User", "User")
                        .WithMany("Pets")
                        .HasForeignKey("UserId")
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PetGuardian.Domain.Models.PetExam", b =>
                {
                    b.HasOne("PetGuardian.Domain.Models.Pet", "Pet")
                        .WithMany("PetExams")
                        .HasForeignKey("PetId")
                        .IsRequired();

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("PetGuardian.Domain.Models.User", b =>
                {
                    b.HasOne("PetGuardian.Domain.Models.Address", "Address")
                        .WithOne()
                        .HasForeignKey("PetGuardian.Domain.Models.User", "AddressId");

                    b.OwnsOne("PetGuardian.Core.PetGuardianCore.DomainObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("EmailAddress")
                                .IsRequired()
                                .HasMaxLength(254)
                                .HasColumnType("varchar(254)")
                                .HasColumnName("Email");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("Address");

                    b.Navigation("Email")
                        .IsRequired();
                });

            modelBuilder.Entity("PetGuardian.Domain.Models.Vaccine", b =>
                {
                    b.HasOne("PetGuardian.Domain.Models.Pet", "Pet")
                        .WithMany("Vaccines")
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("PetGuardian.Domain.Models.Veterinarian", b =>
                {
                    b.OwnsOne("PetGuardian.Core.DomainObjects.CRVCode", "CrvCode", b1 =>
                        {
                            b1.Property<Guid>("VeterinarianId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("CodeNumber")
                                .HasColumnType("int");

                            b1.Property<string>("FromState")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("VeterinarianId");

                            b1.ToTable("Veterinarians");

                            b1.WithOwner()
                                .HasForeignKey("VeterinarianId");
                        });

                    b.Navigation("CrvCode")
                        .IsRequired();
                });

            modelBuilder.Entity("PetVeterinarian", b =>
                {
                    b.HasOne("PetGuardian.Domain.Models.Pet", null)
                        .WithMany()
                        .HasForeignKey("PetSharedListId")
                        .IsRequired();

                    b.HasOne("PetGuardian.Domain.Models.Veterinarian", null)
                        .WithMany()
                        .HasForeignKey("VeterinariansAllowedId")
                        .IsRequired();
                });

            modelBuilder.Entity("PetGuardian.Domain.Models.Pet", b =>
                {
                    b.Navigation("Medicines");

                    b.Navigation("PetExams");

                    b.Navigation("Vaccines");
                });

            modelBuilder.Entity("PetGuardian.Domain.Models.User", b =>
                {
                    b.Navigation("Pets");
                });
#pragma warning restore 612, 618
        }
    }
}
